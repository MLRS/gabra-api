mixin icon(name, text)
  if text
    i(class="fas fa-fw fa-"+name).mr-1
    |#{text}
  else
    i(class="fas fa-fw fa-"+name)

mixin loader(name)
  img(src=baseURL+"/images/ajax-loader.gif",style="visibility:hidden;height:24px;width:24px",id="loading-"+name)

doctype html
html(lang="en")
  head
    meta(charset="utf-8")
    meta(http-equiv="X-UA-Compatible",content="IE=edge")
    meta(name="viewport",content="width=device-width, initial-scale=1")
    link(rel="icon",type="image/png",href=baseURL+"/images/transfer-trans.png")
    link(rel="shortcut icon",type="image/png",href=baseURL+"/images/transfer-trans.png")

    title Ġabra API
      if title
        | : 
        =title

    script.
      const GabraAPI = {
        'baseURL': '#{baseURL}',
        'gabraURL': '#{gabraURL}',

        login: function () {
          axios.get(this.baseURL+"/auth/login")
            .then(resp => {
              sessionStorage.setItem('user', JSON.stringify(resp.data))
              this.checkLoggedIn()
            })
            .catch(err => {
              sessionStorage.removeItem('user')
            })
        },
        
        checkLoggedIn: function () {
          try {
            let user = JSON.parse(sessionStorage.getItem('user'))
            if (user) {
              let btn = document.getElementById('btn-login')
              btn.innerText = user.username
              btn.classList.remove('btn-link')
              btn.onclick = null
            }
          } catch {}
        }
      }

    style
      include ../public/stylesheets/styles.css

    link(rel='stylesheet', href=baseURL+'/module/bootstrap/dist/css/bootstrap.min.css')
    script(src="https://kit.fontawesome.com/452e791a35.js" crossorigin="anonymous")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.2/axios.min.js" integrity="sha256-T/f7Sju1ZfNNfBh7skWn0idlCBcI3RwdLSS4/I7NQKQ=" crossorigin="anonymous")

  body(role="document")
    nav.navbar.navbar-expand-lg.navbar-light.shadow-sm.sticky-top.bg-light.border-bottom.mb-4
      .container
        a.navbar-brand.text-red.mr-4(href=baseURL+'/')
          +icon('exchange-alt', 'Ġabra API')
        form.mr-auto(role='search' action=baseURL+'/search')
          .input-group
            - var search_term = (query) ? query.s : ''
            input(type="search",name="s",autofocus="true",placeholder="Search",value=search_term).form-control
            .input-group-append
              button(type="submit").btn.btn-primary
                +icon('search')

        .collapse.navbar-collapse.ml-2.d-flex
          .navbar-nav.mr-auto.flex-row
            a.nav-item.nav-link(href='/schema') Schema
            a.nav-item.nav-link(href='/download') Download
            //- a.nav-item.nav-link(href=baseURL+"/lexemes/add")
              +icon('plus', 'New lexeme')
            //- a.nav-item.nav-link(href=baseURL+"/logs")
              +icon('history', 'Recent changes')
          button.btn.btn-link(onclick="GabraAPI.login()")#btn-login
            +icon('user', 'Login')

    block container
    //- footer
      p.mt-5.text-muted.text-center.small Built and maintained by John J. Camilleri
